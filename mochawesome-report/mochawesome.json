{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-30T12:38:17.697Z",
    "end": "2024-01-30T12:38:25.815Z",
    "duration": 8118,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2c8d45ab-dec5-40b6-9c71-edb4b4204a12",
      "title": "",
      "fullFile": "C:\\Users\\BCT-0050\\ok_unit_automation\\test\\wip.test.js",
      "file": "\\test\\wip.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "796bb3d7-158f-4ae1-a5a7-b0c8aa7fed10",
          "title": "Login and Place Multiple Bids with Predefined Users",
          "fullFile": "C:\\Users\\BCT-0050\\ok_unit_automation\\test\\wip.test.js",
          "file": "\\test\\wip.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Login and Place Multiple Bids with Predefined Users\"",
              "fullTitle": "Login and Place Multiple Bids with Predefined Users \"before all\" hook in \"Login and Place Multiple Bids with Predefined Users\"",
              "timedOut": false,
              "duration": 1842,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Perform login for each user to obtain authentication tokens\nawait Promise.all(users.map(async (user) => {\n    const res = await agent.post('/visitor/login').send(user);\n    user.token = res.body.token;\n}));",
              "err": {},
              "uuid": "c348e175-f1dc-4a42-9cc8-9d56cc2daddc",
              "parentUUID": "796bb3d7-158f-4ae1-a5a7-b0c8aa7fed10",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [],
          "tests": [
            {
              "title": "should fetch catalog, find item at random, and place multiple bids from multiple users",
              "fullTitle": "Login and Place Multiple Bids with Predefined Users should fetch catalog, find item at random, and place multiple bids from multiple users",
              "timedOut": false,
              "duration": 6148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const catalogPayload = {\n    lotsPerPage: 200,\n    page: 1,\n    isFavorite: false,\n    dealerId: \"\",\n    searchParam: null,\n    extColor: null,\n    carModel: null,\n    make: null,\n    year: null\n};\nconst bidPromises = Array.from({ length: numBids }, () => placeBid(users, catalogPayload));\nawait Promise.all(bidPromises);",
              "err": {},
              "uuid": "ff7cba8a-1a35-4255-af2a-d3b221966492",
              "parentUUID": "796bb3d7-158f-4ae1-a5a7-b0c8aa7fed10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff7cba8a-1a35-4255-af2a-d3b221966492"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6148,
          "root": false,
          "rootEmpty": false,
          "_timeout": 1000000000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 1000000000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}